{"ast":null,"code":"var _jsxFileName = \"/Users/zain/Blockchain_Project/student-test/src/App.js\",\n  _s = $RefreshSig$();\nimport { userState } from 'react';\nimport TestScreen from \"./components/QuizScreen.js\";\nimport JoinScreen from \"./components/QuizScreen.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isTestStarted, setIsQuizStarted] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-container\",\n      children: isTestStarted ? /*#__PURE__*/_jsxDEV(QuizScreen, {\n        retry: () => setIsQuizStarted(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"joinScreen\", {\n        start: () => setIsQuizStarted(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+a54PslfqdNr30QcFVmnoRKr+CQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["userState","TestScreen","JoinScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isTestStarted","setIsQuizStarted","useState","children","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","className","QuizScreen","retry","start","_c","$RefreshReg$"],"sources":["/Users/zain/Blockchain_Project/student-test/src/App.js"],"sourcesContent":["import {userState} from 'react';\nimport TestScreen from \"./components/QuizScreen.js\";\nimport JoinScreen from \"./components/QuizScreen.js\";\n\nfunction App() {\n  const [isTestStarted, setIsQuizStarted] = useState(false);\n  return (\n    <>\n      <Navbar />\n      <div className=\"test-container\">\n        {isTestStarted ? (\n          <QuizScreen retry={() => setIsQuizStarted(false)} />\n        ) : (\n          <joinScreen start={() => setIsQuizStarted(true)} />\n        )}\n      </div>\n    </>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACzD,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACS,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVb,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAN,QAAA,EAC5BH,aAAa,gBACZL,OAAA,CAACe,UAAU;QAACC,KAAK,EAAEA,CAAA,KAAMV,gBAAgB,CAAC,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEpDb,OAAA;QAAYiB,KAAK,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,IAAI;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACnD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACT,EAAA,CAdQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAeZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}